Index: app/src/main/java/sheridan/capstone/findmyfarmer/Customer/View/FarmerProducts.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sheridan.capstone.findmyfarmer.Customer.View\r\n\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport com.android.volley.Request\r\nimport com.android.volley.Response\r\nimport com.android.volley.RequestQueue\r\nimport com.android.volley.toolbox.JsonObjectRequest\r\nimport com.android.volley.toolbox.Volley\r\nimport org.json.JSONArray\r\nimport org.json.JSONException\r\nimport org.w3c.dom.Text\r\nimport sheridan.capstone.findmyfarmer.Database.DatabaseAPIHandler\r\nimport sheridan.capstone.findmyfarmer.Entities.Product\r\nimport sheridan.capstone.findmyfarmer.R\r\n\r\nclass FarmerProducts : Fragment() {\r\n\r\n    private lateinit var name: TextView\r\n    private lateinit var category: TextView\r\n    private lateinit var Pid: TextView\r\n    private lateinit var quantity: TextView\r\n    private lateinit var requestQueue: RequestQueue\r\n\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        val view:View = inflater.inflate(R.layout.product_display_card, container, false)\r\n\r\n        requestQueue= Volley.newRequestQueue(activity?.applicationContext)\r\n        name = view.findViewById<TextView>(R.id.productN)\r\n         category = view.findViewById<TextView>(R.id.productC)\r\n        Pid = view.findViewById<TextView>(R.id.productI)\r\n        quantity= view.findViewById<TextView>(R.id.productQ)\r\n\r\n        loadData()\r\n        \r\n        // Inflate the layout for this fragment\r\n        return view\r\n    }\r\n    private fun loadData(){\r\n\r\n\r\n        //Lists and objects\r\n        val c= DatabaseAPIHandler(activity?.applicationContext)\r\n        val productList = ArrayList<Product>()\r\n        val categories = listOf<String>(\"Fruits\",\"Vegetables\",\"Rice\",\"Grain\",\"Meat\",\"Fish\",\"Kosher\",\"Halal\",\"Vegan\")\r\n\r\n        //api keys & JSON\r\n        val apiKey =\"87cbc6eb7d3548bd9b95d1f715621c20\"\r\n        val url = \"https://api.spoonacular.com/food/ingredients/search?apiKey=$apiKey&query=apple\"\r\n        var productlist: JSONArray\r\n\r\n        var randomCategory: String\r\n        val req = JsonObjectRequest(Request.Method.GET, url, null, Response.Listener {\r\n                response -> try{\r\n            productlist = response.getJSONArray(\"results\")\r\n\r\n            for (i in 0..productlist.length()){\r\n                val produce = productlist.getJSONObject(i)\r\n\r\n                val id = produce.getInt(\"id\")\r\n\r\n                val img = produce.get(\"image\")\r\n                println(img)\r\n                //converts image to Bitmap then uploads to view\r\n                // var convtoBit = Base64.decode(img.toString(),0)\r\n                //var image = BitmapFactory.decodeByteArray(convtoBit, 0, convtoBit.size)\r\n\r\n                val pName = produce.getString(\"name\")\r\n                Pid.append(\"$id\\n\")\r\n                name.append(\"$pName\\n\")\r\n\r\n                //productImage.setImageBitmap(image)\r\n\r\n                randomCategory = categories[Math.random().toInt() * (categories.size - 0) + 1]\r\n                category.append(\"$randomCategory\\n\")\r\n\r\n                //   convertStringIntoLoad(img)\r\n\r\n                //uploads certain values to db\r\n                productList += Product(id, pName, randomCategory)\r\n\r\n            }\r\n            c.execute(\"/addProducts\",productlist)\r\n\r\n        } catch (e: JSONException){\r\n            e.printStackTrace()\r\n        }\r\n            return@Listener\r\n        }, { error -> error.printStackTrace() })\r\n\r\n        //after setting up json object, requests call to api\r\n        requestQueue.add(req)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/sheridan/capstone/findmyfarmer/Customer/View/FarmerProducts.kt	(revision eeade8116719d756d0b10fe29f2f940f1eb2593d)
+++ app/src/main/java/sheridan/capstone/findmyfarmer/Customer/View/FarmerProducts.kt	(date 1606616150135)
@@ -32,7 +32,7 @@
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
     ): View {
-        val view:View = inflater.inflate(R.layout.product_display_card, container, false)
+        val view:View = inflater.inflate(R.layout.fragment_farmer_products, container, false)
 
         requestQueue= Volley.newRequestQueue(activity?.applicationContext)
         name = view.findViewById<TextView>(R.id.productN)
Index: app/src/main/java/sheridan/capstone/findmyfarmer/Farmer/View/ProductManagement.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sheridan.capstone.findmyfarmer.Farmer.View\r\n\r\nimport android.content.Context\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.drawable.Drawable\r\nimport android.os.Bundle\r\nimport android.util.Base64\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport com.android.volley.Request\r\nimport com.android.volley.Response\r\nimport com.android.volley.toolbox.JsonObjectRequest\r\nimport kotlinx.android.synthetic.main.fragment_product_management.*\r\nimport org.json.JSONArray\r\nimport org.json.JSONException\r\nimport sheridan.capstone.findmyfarmer.Database.DatabaseAPIHandler\r\nimport sheridan.capstone.findmyfarmer.Entities.Product\r\nimport sheridan.capstone.findmyfarmer.R\r\nimport com.android.volley.RequestQueue\r\nimport com.android.volley.toolbox.Volley\r\nimport kotlinx.android.synthetic.main.activity_account_settings.*\r\nimport kotlinx.android.synthetic.main.farmer_info_card.*\r\n\r\n\r\nclass ProductManagement : Fragment() {\r\n    private lateinit var requestQueue: RequestQueue\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {\r\n\r\n        requestQueue= Volley.newRequestQueue(activity?.applicationContext)\r\n        val view: View = inflater.inflate(R.layout.fragment_product_management, container, false)\r\n\r\n        storeAPIDataintoDB(view)\r\n\r\n\r\n\r\n        // Inflate the layout for this fragment\r\n        return view\r\n    }\r\n\r\n   private fun storeAPIDataintoDB(view: View){\r\n        var randomCategory: String\r\n\r\n        val productName = view.findViewById<TextView>(R.id.nME)\r\n        val productCategory= view.findViewById<TextView>(R.id.produce_cate)\r\n        val productImage = view.findViewById<ImageView>(R.id.player)\r\n\r\n        //Lists and objects\r\n        val c= DatabaseAPIHandler(activity?.applicationContext)\r\n       val productList = ArrayList<Product>()\r\n        val categories = listOf<String>(\"Fruits\",\"Vegetables\",\"Rice\",\"Grain\",\"Meat\",\"Fish\",\"Kosher\",\"Halal\",\"Vegan\")\r\n\r\n        //api keys & JSON\r\n        val apiKey =\"87cbc6eb7d3548bd9b95d1f715621c20\"\r\n        val url = \"https://api.spoonacular.com/food/ingredients/search?apiKey=$apiKey&query=apple\"\r\n        var productlist: JSONArray\r\n\r\n\r\n        val req = JsonObjectRequest(Request.Method.GET, url, null, Response.Listener {\r\n                response -> try{\r\n            productlist = response.getJSONArray(\"results\")\r\n\r\n            for (i in 0..productlist.length()){\r\n                val produce = productlist.getJSONObject(i)\r\n\r\n                val id = produce.getInt(\"id\")\r\n\r\n                val img = produce.get(\"image\")\r\n                println(img)\r\n                //converts image to Bitmap then uploads to view\r\n               // var convtoBit = Base64.decode(img.toString(),0)\r\n                //var image = BitmapFactory.decodeByteArray(convtoBit, 0, convtoBit.size)\r\n                player.setImageDrawable(img as Drawable?)\r\n                val pName = produce.getString(\"name\")\r\n\r\n                productName.text=pName\r\n\r\n                //productImage.setImageBitmap(image)\r\n\r\n                randomCategory = categories[Math.random().toInt() * (categories.size - 0) + 1]\r\n                productCategory.text=randomCategory\r\n\r\n                //   convertStringIntoLoad(img)\r\n\r\n                //uploads certain values to db\r\n                productList += Product(id, pName, randomCategory)\r\n\r\n            }\r\n            c.execute(\"/addProducts\",productlist)\r\n\r\n        } catch (e: JSONException){\r\n            e.printStackTrace()\r\n        }\r\n            return@Listener\r\n        }, { error -> error.printStackTrace() })\r\n\r\n        //after setting up json object, requests call to api\r\n       requestQueue.add(req)\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/sheridan/capstone/findmyfarmer/Farmer/View/ProductManagement.kt	(revision eeade8116719d756d0b10fe29f2f940f1eb2593d)
+++ app/src/main/java/sheridan/capstone/findmyfarmer/Farmer/View/ProductManagement.kt	(date 1606625704048)
@@ -74,7 +74,7 @@
                 //converts image to Bitmap then uploads to view
                // var convtoBit = Base64.decode(img.toString(),0)
                 //var image = BitmapFactory.decodeByteArray(convtoBit, 0, convtoBit.size)
-                player.setImageDrawable(img as Drawable?)
+                player.setImageResource(img as Int)
                 val pName = produce.getString("name")
 
                 productName.text=pName
